--Number of customers using partner EHR who've used Kareo Clinical previously

--find and create temp table for customers w/clinical notes
CREATE TABLE TEMP_NS (ID INT);
INSERT INTO TEMP_NS SELECT DISTINCT NS.NOTE_ID 
FROM HEALTHCARE.NOTE_SECTIONS NS 
    WHERE NS.DATA IS NOT NULL;

--find and create temp table for patients w/ clinical notes
CREATE TABLE TEMP_N (PATIENT_ID INT);
INSERT INTO TEMP_N SELECT DISTINCT N.PATIENT_ID 
FROM HEALTHCARE.NOTES N 
    INNER JOIN TEMP_NS NS ON NS.ID=N.ID;

--find and create temp table for patients with clinical notes and surescripts tx
CREATE TABLE TEMP_P (ENTERPRISE_ID INT);
INSERT INTO TEMP_P SELECT P.ENTERPRISE_ID 
FROM HEALTHCARE.PATIENTS P 
    --INNER JOIN TEMP_N N ON 
      --  N.PATIENT_ID=P.PATIENTS_ID
    INNER JOIN HEALTHCARE.PATIENT_MEDICATIONS M ON 
        M.PATIENT_ID=P.PATIENTS_ID
    INNER JOIN HEALTHCARE.SURESCRIPTS_ORDERS S ON 
        S.ID=M.ID;

--find and create temp table for linking patients to enterprise table
CREATE TABLE TEMP_E (ENTERPRISE_ID INT,CUSTOMER_ID INT,PM_ENABLED INT,ENTERPRISE_STATUS_ID INT);
INSERT INTO TEMP_E SELECT E.ENTERPRISE_ID,E.CUSTOMER_ID,E.PM_ENABLED,E.ENTERPRISE_STATUS_ID
FROM ECOMMENT.ENTERPRISE E
    INNER JOIN TEMP_P P ON P.ENTERPRISE_ID=E.ENTERPRISE_ID
WHERE E.PM_ENABLED=1 AND E.ENTERPRISE_STATUS_ID=1;    

--find and create temp table for linking patients to customer table filtering for partnerID
CREATE TABLE TEMP_C (CUSTOMER_ID INT,PARTNER_ID INT);
INSERT INTO TEMP_C SELECT C.CUSTOMER_ID,C.PARTNER_ID 
FROM ECOMMENT.CUSTOMER C 
    INNER JOIN TEMP_E E ON E.CUSTOMER_ID=C.CUSTOMER_ID
--SELECT * FROM ECOMMENT.PARTNER;
WHERE C.PARTNER_ID= 5;

--find count with specific partnerID
SELECT COUNT(DISTINCT CUSTOMER_ID) FROM TEMP_C;

--drop table temp_c;

--drop table TEMP_NS
--drop table TEMP_N
--drop table TEMP_P

